{"version":3,"sources":["services/movieRequest.js","components/Cast/Cast.module.css","components/Reviews/Reviews.module.css","components/MovieDetailsPage/MovieDetailsPage.module.css","components/Cast/Cast.js","components/Reviews/Reviews.js","components/MovieDetailsPage/MovieDetailsPage.js"],"names":["key","url","requests","getTrendingMovies","axios","get","response","data","results","moviesList","console","log","searchMovie","query","movies","getMovieDetails","id","movieDetails","getMovieCast","cast","movieCast","getMovieReviews","movieReviews","module","exports","Cast","map","person","profile_path","className","style","actor","src","alt","name","Reviews","reviews","review","authorTitle","author","content","MovieDetailsPage","state","img","title","year","userScore","overView","genres","handleGoBack","props","location","history","from","replace","push","this","match","params","movieId","then","details","releaseDate","Date","release_date","setState","poster_path","original_title","getFullYear","Math","round","vote_average","overview","detailsContainer","onClick","movieTitle","genresList","genre","additionalInfo","to","pathname","routes","moviesPage","length","exact","path","render","Component"],"mappings":"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","file":"static/js/movie-details-page.81ecfcf7.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst key = \"54446aa39ef6f8361f9f28a334ac1cc9\";\r\nconst url = \"https://api.themoviedb.org/3\";\r\n\r\nconst requests = {\r\n  async getTrendingMovies() {\r\n    try {\r\n      const response = await axios.get(\r\n        `${url}/trending/movie/day?api_key=${key}`\r\n      );\r\n      const data = await response.data;\r\n      const moviesList = await data.results;\r\n      return moviesList;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async searchMovie(query) {\r\n    try {\r\n      const response = await axios.get(\r\n        `${url}/search/movie?api_key=${key}&query=${query}&language=en-US&page=1`\r\n      );\r\n      const data = await response.data;\r\n      const movies = await data.results;\r\n      return movies;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async getMovieDetails(id) {\r\n    try {\r\n      const response = await axios.get(\r\n        `${url}/movie/${id}?api_key=${key}&language=en-US`\r\n      );\r\n      const movieDetails = await response.data;\r\n      return movieDetails;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n  async getMovieCast(id) {\r\n    try {\r\n      const response = await axios.get(\r\n        `${url}/movie/${id}/credits?api_key=${key}&language=en-US`\r\n      );\r\n      const data = await response.data;\r\n      const movieCast = await data.cast;\r\n      return movieCast;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n  async getMovieReviews(id) {\r\n    try {\r\n      const response = await axios.get(\r\n        `${url}/movie/${id}/reviews?api_key=${key}&language=en-US`\r\n      );\r\n      const data = await response.data;\r\n      const movieReviews = await data.results;\r\n      return movieReviews;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n};\r\n\r\nexport default requests;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actor\":\"Cast_actor__1g1k8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authorTitle\":\"Reviews_authorTitle__nI8Ae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsContainer\":\"MovieDetailsPage_detailsContainer__SBKH8\",\"details\":\"MovieDetailsPage_details__1_zq7\",\"movieTitle\":\"MovieDetailsPage_movieTitle__1ow6H\",\"genresList\":\"MovieDetailsPage_genresList__25U7f\",\"additionalInfo\":\"MovieDetailsPage_additionalInfo__3Tj4a\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Cast.module.css\";\r\n\r\nconst Cast = ({ cast }) => {\r\n  return (\r\n    <ul>\r\n      {cast.map((person) => (\r\n        <li key={person.id}>\r\n          {person.profile_path && (\r\n            <img\r\n              className={style.actor}\r\n              src={`https://image.tmdb.org/t/p/original/${person.profile_path}`}\r\n              alt={person.name}\r\n            />\r\n          )}\r\n          <h3>{person.name}</h3>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n\r\nCast.propTypes = {\r\n  cast: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Reviews.module.css\";\r\n\r\nconst Reviews = ({ reviews }) => {\r\n  return (\r\n    <ul>\r\n      {reviews.map((review) => (\r\n        <li key={review.id}>\r\n          <h3 className={style.authorTitle}>Author: {review.author}</h3>\r\n          <p>{review.content}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n\r\nReviews.propTypes = {\r\n  reviews: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\nimport requests from \"../../services/movieRequest\";\r\nimport routes from \"../../services/routes\";\r\nimport Cast from \"../Cast/Cast\";\r\nimport Reviews from \"../Reviews/Reviews\";\r\nimport style from \"./MovieDetailsPage.module.css\";\r\n\r\nconst { getMovieDetails, getMovieCast, getMovieReviews } = requests;\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    img: \"\",\r\n    title: \"\",\r\n    year: \"\",\r\n    userScore: \"\",\r\n    overView: \"\",\r\n    genres: [],\r\n    cast: [],\r\n    reviews: [],\r\n  };\r\n  componentDidMount() {\r\n    getMovieDetails(this.props.match.params.movieId).then((details) => {\r\n      const releaseDate = new Date(details.release_date);\r\n      return this.setState({\r\n        img: `https://image.tmdb.org/t/p/w300/${details.poster_path}`,\r\n        title: details.original_title,\r\n        year: releaseDate.getFullYear(),\r\n        userScore: Math.round(details.vote_average * 10),\r\n        overView: details.overview,\r\n        genres: details.genres,\r\n      });\r\n    });\r\n    getMovieCast(this.props.match.params.movieId).then((cast) => {\r\n      this.setState({\r\n        cast: cast,\r\n      });\r\n    });\r\n    getMovieReviews(this.props.match.params.movieId).then((reviews) => {\r\n      this.setState({ reviews: reviews });\r\n    });\r\n  }\r\n  handleGoBack = () => {\r\n    const { location, history } = this.props;\r\n    if (location.state && location.state.from) {\r\n      return history.replace(location.state.from);\r\n    }\r\n    return history.push(\"/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={style.detailsContainer}>\r\n          <div>\r\n            <button onClick={this.handleGoBack}>&larr; Go back</button>\r\n            <img src={this.state.img} alt=\"Movie poster\" />\r\n          </div>\r\n          <div className={style.details}>\r\n            <h1 className={style.movieTitle}>\r\n              {this.state.title} {this.state.year && `(${this.state.year})`}\r\n            </h1>\r\n            <span\r\n              className={style.movieTitle}\r\n            >{`User score: ${this.state.userScore}%`}</span>\r\n            <div>\r\n              <h2>Overview</h2>\r\n              <p>{this.state.overView}</p>\r\n            </div>\r\n            <div>\r\n              <h2>Genres</h2>\r\n              <ul className={style.genresList}>\r\n                {this.state.genres.map((genre) => {\r\n                  return <li key={genre.id}>{genre.name}</li>;\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={style.additionalInfo}>\r\n          <h2>Additional information</h2>\r\n          <ul>\r\n            <li>\r\n              <Link\r\n                to={{\r\n                  pathname: `${routes.moviesPage}/${this.props.match.params.movieId}/cast`,\r\n                  state: {\r\n                    from:\r\n                      this.props.location.state &&\r\n                      this.props.location.state.from &&\r\n                      this.props.location.state.from,\r\n                  },\r\n                }}\r\n              >\r\n                Cast\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link\r\n                to={{\r\n                  pathname: `${routes.moviesPage}/${this.props.match.params.movieId}/reviews`,\r\n                  state: {\r\n                    from:\r\n                      this.props.location.state &&\r\n                      this.props.location.state.from &&\r\n                      this.props.location.state.from,\r\n                  },\r\n                }}\r\n              >\r\n                Reviews\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <Switch>\r\n            {this.state.cast.length > 0 && (\r\n              <Route\r\n                exact\r\n                path={`${this.props.match.url}/cast`}\r\n                render={() => <Cast cast={this.state.cast} />}\r\n              />\r\n            )}\r\n            {this.state.reviews.length > 0 ? (\r\n              <Route\r\n                exact\r\n                path={`${this.props.match.url}/reviews`}\r\n                render={() => <Reviews reviews={this.state.reviews} />}\r\n              />\r\n            ) : (\r\n              <Route\r\n                exact\r\n                path={`${this.props.match.url}/reviews`}\r\n                render={() => <h3>We don't have any reviews for this movie</h3>}\r\n              />\r\n            )}\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}