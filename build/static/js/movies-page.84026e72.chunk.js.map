{"version":3,"sources":["services/movieRequest.js","components/MoviesList/MovieItem/MovieItem.module.css","components/MoviesList/MoviesList.module.css","components/MoviesList/MovieItem/MovieItem.js","components/MoviesList/MoviesList.js","components/pages/MoviesPage/MoviesPage.module.css","components/pages/MoviesPage/MoviesPage.js"],"names":["key","url","requests","getTrendingMovies","axios","get","response","data","results","moviesList","console","log","searchMovie","query","movies","getMovieDetails","id","movieDetails","getMovieCast","cast","movieCast","getMovieReviews","movieReviews","module","exports","withRouter","title","location","className","style","link","to","pathname","routes","moviesPage","state","from","map","movie","MoviesPage","handleSubmit","e","preventDefault","then","res","setState","target","reset","props","history","push","search","handleChange","value","this","URLSearchParams","substring","form","onSubmit","inputField","onChange","type","length","Component"],"mappings":"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","file":"static/js/movies-page.84026e72.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst key = \"54446aa39ef6f8361f9f28a334ac1cc9\";\r\nconst url = \"https://api.themoviedb.org/3\";\r\n\r\nconst requests = {\r\n  async getTrendingMovies() {\r\n    try {\r\n      const response = await axios.get(\r\n        `${url}/trending/movie/day?api_key=${key}`\r\n      );\r\n      const data = await response.data;\r\n      const moviesList = await data.results;\r\n      return moviesList;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async searchMovie(query) {\r\n    try {\r\n      const response = await axios.get(\r\n        `${url}/search/movie?api_key=${key}&query=${query}&language=en-US&page=1`\r\n      );\r\n      const data = await response.data;\r\n      const movies = await data.results;\r\n      return movies;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async getMovieDetails(id) {\r\n    try {\r\n      const response = await axios.get(\r\n        `${url}/movie/${id}?api_key=${key}&language=en-US`\r\n      );\r\n      const movieDetails = await response.data;\r\n      return movieDetails;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n  async getMovieCast(id) {\r\n    try {\r\n      const response = await axios.get(\r\n        `${url}/movie/${id}/credits?api_key=${key}&language=en-US`\r\n      );\r\n      const data = await response.data;\r\n      const movieCast = await data.cast;\r\n      return movieCast;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n  async getMovieReviews(id) {\r\n    try {\r\n      const response = await axios.get(\r\n        `${url}/movie/${id}/reviews?api_key=${key}&language=en-US`\r\n      );\r\n      const data = await response.data;\r\n      const movieReviews = await data.results;\r\n      return movieReviews;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n};\r\n\r\nexport default requests;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"MovieItem_link__1bWyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviesList\":\"MoviesList_moviesList__2VLfv\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport routes from \"../../../services/routes\";\r\nimport style from \"./MovieItem.module.css\";\r\n\r\nconst MovieItem = ({ title, id, location }) => {\r\n  return (\r\n    <li>\r\n      <Link\r\n        className={style.link}\r\n        to={{\r\n          pathname: `${routes.moviesPage}/${id}`,\r\n          state: { from: location },\r\n        }}\r\n      >\r\n        {title}\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default withRouter(MovieItem);\r\n\r\nMovieItem.propTypes = {\r\n  title: PropTypes.string,\r\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  location: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport MovieItem from \"./MovieItem/MovieItem\";\r\nimport style from \"./MoviesList.module.css\";\r\n\r\nconst MoviesList = ({ movies }) => {\r\n  return (\r\n    <ul className={style.moviesList}>\r\n      {movies.map((movie) => {\r\n        return <MovieItem key={movie.id} title={movie.title} id={movie.id} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MoviesPage_form__3uUdF\",\"inputField\":\"MoviesPage_inputField__39oeB\"};","import React, { Component } from \"react\";\r\nimport requests from \"../../../services/movieRequest\";\r\nimport MoviesList from \"../../MoviesList/MoviesList\";\r\nimport style from \"./MoviesPage.module.css\";\r\n\r\nconst { searchMovie } = requests;\r\n\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    query: \"\",\r\n    movies: [],\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.query) {\r\n      searchMovie(this.state.query)\r\n        .then((res) => this.setState({ movies: res }))\r\n        .then(() => {\r\n          e.target.reset();\r\n          this.props.history.push({\r\n            search: `query=${this.state.query}`,\r\n          });\r\n        });\r\n    }\r\n  };\r\n  handleChange = (e) => {\r\n    if (e.target.value) {\r\n      this.setState({ query: e.target.value });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.history.location.search) {\r\n      let params = new URLSearchParams(\r\n        this.props.history.location.search.substring(1)\r\n      );\r\n      let query = params.get(\"query\");\r\n      searchMovie(query).then((res) => this.setState({ movies: res }));\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className={style.form} onSubmit={this.handleSubmit}>\r\n          <input\r\n            className={style.inputField}\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n          />\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n        {this.state.movies.length > 0 && (\r\n          <MoviesList movies={this.state.movies} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}